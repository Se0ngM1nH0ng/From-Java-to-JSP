package view;

import java.util.ArrayList;
import java.util.Scanner;

import model.MemberVO;
import model.MusicVO;

public class View {
	// 1. 멤버 변수
	private static Scanner sc = new Scanner(System.in);
	// 2. 메서드

	// try-catch
	public int tryCatch() {
		int retry=0; // 오류,유효성 검사 체크용
		while (true) {
			try {
				if(retry != 0) { // 두번째 부터는 오류가 카운트 됐으므로 
					System.out.print("재");
				}
				System.out.print("입력 : "); // 처음 시작 했을때 오류카운트가 없을때
				int action = sc.nextInt(); // 실행 번호를 입력 받는다.
				if(action < 0 ) { // 0 밑으로 갈수 없다 !!
					System.out.println("\n'0'이상의 숫자만 입력 가능합니다."); // 0번이 나가기 버튼이라 0번을 추가 해줘야 하는 이유
					retry++; // 오류 횟수 카운트 하기 
					continue;
				}
				return action; // 이런게 아니면 실행 번호 반환
			} catch (Exception e) {
				sc.nextLine();
				System.out.println("\n숫자만 입력 가능합니다."); // 정수를 입력 했을때 예외처리 
				retry++;
			}
		}
	}
	// 각각의 메뉴 출력은 해당하는 메뉴들 갯수만큼까지만 입력하게 하기 위해 output을 int로 반환.
	// 프로그램 메뉴 출력
	public int printMain() { // 프로그램 메뉴 
		System.out.println("\n=== 프로그램 ===");
		System.out.println("1. 로그인");
		System.out.println("2. 회원가입");
		System.out.println("0. 프로그램 종료");
		System.out.println("============");
		return 2; // 0,1,2 메뉴가 2번 까지라 int 2로 반환하기 // 0,1,2 말고 다른 숫자는 안된다. 
	}
	// 음악 메뉴 출력
	public int printMusic(MemberVO mVO) {// 음악 메뉴 출력
		System.out.println("\n["+mVO.getName()+"] 님");
		System.out.println("=== 멜 론 ===");
		System.out.println("1. 노래 목록");
		System.out.println("2. 플레이리스트");
		System.out.println("3. 최고 재생횟수");
		System.out.println("4. 노래 이름 검색");
		System.out.println("5. 노래 재생");
		System.out.println("6. 랜덤 재생");
		System.out.println("7. 마이 페이지");
		System.out.println("0. 로그아웃");
		System.out.println("============");
		return 7; // 0~7 까지로 설정하여 int 7로 반환 // 0~7까지 숫자 말고는 안된다. 다른 숫자는 유효성에 걸림
	}
	// 마이페이지 메뉴 출력	
	public int printMyPageMenu() { // 마이페이지 메뉴 출력 
		System.out.println("\n=== 마 이 페 이 지 ===");
		System.out.println("1. 이름 변경");
		System.out.println("2. 비밀번호 변경");
		System.out.println("0. 나가기");
		System.out.println("============");
		return 2;
	}
	// 실행 번호 입력
	public int getNum(int menu) {// 실행 번호 입력
		int retry=0; // 오류횟수 카운트
		while(true) {
			if (retry != 0) { // 0이 아닐시 오류횟수가 있다는 뜻
				System.out.print("재"); // 앞에 재를 붙인다
			}else {
				System.out.print("번호 "); // 처음이면 번호를 붙여 번호입력 이라고 연결되도록 
			}
			int num = tryCatch(); // 예외처리 
			if (num > menu) { // 입력한 번호가 최대 메뉴 번호까지를 넘기면 
				System.out.println("\n번호가 일치하지 않습니다."); // 다른 번호는 유효성 에서 걸린다.
				retry++; // 오류횟수 카운트 추가 
				continue;
			}
			return num; // 잘 내려왔다면 실행 번호 반환해 
		}
	}
	// 노래 번호 입력 (추가, 재생)	
	public int getMusicNum(int action) { // 노래 번호 입력
		int retry=0; // 오류 횟수 카운트
		while(true) {
			if (retry != 0) { 
				System.out.print("재");
			}else {
				if (action == 2 || action == 4) { // 메뉴 2번이나 4번을 누르면 
					System.out.print("추가할"); // 추가할을 붙인다 
				}else if (action == 5) { // 메뉴 5번을 누르면 
					System.out.print("재생할"); // 재생할 을 붙인다.
				}
				System.out.print(" 노래 번호 "); // 연결되면 추가할 ~ 노래번호, 재생할~ 노래번호
			}
			int num = tryCatch(); // 번호 받기 
			if (num > 100) { // 최대 메뉴갯수 // 최대로 100개를 뽑아왔기 때문에 더 넘칠수가 없다
				System.out.println("\n번호가 일치하지 않습니다.");
				retry++;
				continue;
			}
			return num;
		}
	}

	// 나가기 문구
	public void exitNum() {
		System.out.println("\n[나가기 0번]");
	}
	// 나가기 완료
	public void exitNumEnd() {
		System.out.println("\n나가기 성공!");
	}
	// 프로그램 종료
	public void programEnd() {
		System.out.println("\n프로그램 종료!");
	}


	// 재생 완료(성공)
	public void playMusic(MusicVO vo) {
		System.out.println("\n["+vo.getArtist()+" - "+vo.getTitle()+"] 재생합니다.");
	}
	// 노래 이름 검색
	public String getSearchContent() {
		System.out.println("\n=== 노 래 검 색 ===");
		System.out.print("검색어 입력 : ");
		String name = sc.next();
		return name;
	}
	// 뮤직리스트 출력 ( 각 상황에 맞게 )
	public void printMusicList(ArrayList<MusicVO> mdatas,int action) {
		System.out.println();
		if(mdatas.isEmpty()) { // 사용자편의성고려(UI/UX)
			System.out.println("=== 노 래 없 음 ===");
			return;
		}
		if(action==1) {
			System.out.println("=== 노 래 목 록 ===");
		}
		else if(action==3) {
			System.out.println("=== 최 고 재 생 횟 수 ===");
		}
		else if(action==4) {
			System.out.println("=== 검 색 결 과 ===");
		}
		for(MusicVO data:mdatas) {
			System.out.println(data); // .toString()은 자동호출됩니다!
		}
		System.out.println("=================");
	}
	// === 플레이리스트 ======================================
	// 플레이리스트는 멤버vo 의 Pdatas 를 건드는거라 여기서 구현하기 어려워서 따로 뺐음.
	// 플리 출력 실패
	public void printPlayListEmpty () {
		System.out.println("\n=== 노 래 없 음 ===");
	}
	// 플리 출력 시작
	public void printPlayListStart () {
		System.out.println("\n=== 플 레 이 리 스 트 ===");
	}
	// 플리 출력 완료
	public void printPlayListEnd () {
		System.out.println("======================");
	}
	// 노래 한개 출력
	public void printMusicOne(MusicVO mdata) {

		System.out.println(mdata);
	}
	// 플리 추가할번호 문구
	public void isAddPlayList() {
		System.out.println("\n플레이리스트에 추가할 번호를 입력해주세요.");
	}
	// 플리 추가 실패 - 중복
	public void addPlayListFailDuplicate() {
		System.out.println("\n이미 플레이리스트에 저장되어 있습니다.");
	}
	// 플리 추가 실패 - 번호
	public void addPlayListFailNum() {
		System.out.println("\n검색결과에 없는 번호입니다.");
	}
	// 플리 추가 완료(성공)
	public void addPlayListTrue(MusicVO vo) {
		System.out.println("\n["+vo.getArtist()+" - "+vo.getTitle()+"] 추가합니다.");
	}
	// ====================================================

	// === 회원 가입 ========================================
	// 회원가입 입력
	public MemberVO signUp() {
		System.out.println("\n=== 회 원 가 입 ===");
		System.out.print("아이디 입력 : ");
		String mid=sc.next();
		System.out.print("비밀번호입력 : ");
		String mpw=sc.next();
		System.out.print("비밀번호확인 : ");
		String mpw2=sc.next();
		if(mpw.equals(mpw2)) {
			System.out.print("이름입력 : ");
			String name=sc.next();
			return new MemberVO(mid,mpw,name);
		}
		return null;
	}
	// 회원가입 완료(성공)
	public void signUpTrue() {
		System.out.println("\n회원가입 성공!");
	}
	// 회원가입 실패
	public void signUpFalse() {
		System.out.println("\n회원가입 실패...");
	}
	// ====================================================



	// === 마이페이지 ========================================
	// 비번 입력값
	public String getMpw() {
		System.out.println("\n=== 비 밀 번 호 확 인 ===");
		System.out.print("비밀번호 입력 : ");
		String mpw=sc.next();
		return mpw;
	}
	// 비밀번호 불일치
	public void getMpwFalse() {
		System.out.println("\n비밀번호 불일치...");
	}
	// 새 이름 설정
	public String getSetMname() {
		System.out.print("\n새 이름 입력 : ");
		String mpw=sc.next();
		return mpw;
	}
	// 새 이름 설정 완료(성공)
	public void printSetMnameTrue() {
		System.out.println("\n이름 변경 성공!");
	}
	// 새 이름 설정 실패
	public void printSetMnameFalse() {
		System.out.println("\n이름 변경 실패...");
	}
	// 새 비밀번호 설정
	public String getSetMpw() {
		System.out.print("\n새 비밀번호 입력 : ");
		String mpw=sc.next();
		return mpw;
	}
	// 새 비밀번호 설정 완료(성공)
	public void printSetMpwTrue() {
		System.out.println("\n비밀번호 변경 성공!");
	}
	// 새 비밀번호 설정 실패
	public void printSetMpwFalse() {
		System.out.println("\n비밀번호 변경 실패...");
	}
	// ====================================================


	// === 로그인 ===========================================
	// 로그인
	public MemberVO signIn() {
		System.out.println("\n=== 로 그 인 ===");
		System.out.print("아이디입력 : ");
		String mid=sc.next();
		System.out.print("비밀번호입력 : ");
		String mpw=sc.next();
		return new MemberVO(mid,mpw,null);
	}
	// 로그인 완료(성공)
	public void signInTrue() {
		System.out.println("\n로그인 성공!");
	}
	// 로그인 실패
	public void signInFalse() {
		System.out.println("\n로그인 실패...");
	}

	// 로그아웃
	public void logout() {
		System.out.println("\n=== 로 그 아 웃 ===");
	}
	// 음악 메뉴 종료
	public void printMusicEnd() {
		System.out.println("\n=== 멜 론 종 료 ===");
	}
	// ====================================================
}