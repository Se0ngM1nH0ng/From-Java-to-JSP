★ 대본 ★
1. 정의 (정렬이 뭔지)
정렬이란 데이터를 오름차순이나 내림차순으로 배치하는 것을 말한다.
정렬 시 데이터를 순서에 맞게 배치해 데이터를 쉽고 빠르게 검색할 수 있게 된다.
따라서 정렬은 알고리즘을 이해하는 첫 단계라 할 수 있다.
2. 삽입정렬

1) 정의 (특성)
단순히 하나의 정렬 안 된 부분에 있는 데이터를 정렬된 부분의 특정 위치에 삽
입해가면서 정렬을 진행하는 알고리즘이다. 
쉽게 말하면 앞쪽 요소들과 크기를 비교하며 넣을 위치를 정해주는 방식으로 두
번째 자료부터 시작하여 그 앞(왼쪽)의 자료들과 비교하여 삽입할 위치를 지정한
후 자료를 뒤로 옮기고 지정한 자리에 자료를 삽입하여 정렬하는 알고리즘이다.
즉, 두 번째 자료는 첫 번째 자료, 세 번째 자료는 두 번째와 첫 번째 자료, 네
번째 자료는 세 번째, 두 번째, 첫 번째 자료와 비교한 후 자료가 삽입될 위치를
찾는다. 자료가 삽입될 위치를 찾았다면 그 위치에 자료를 삽입하기 위해 자료를
한 칸씩 뒤로 이동시킨다 
+ 간단한 그림

2) 장단점

장점 -
- 구현이 매우 간단하며,  소스코드가 직관적
- 자료의 수가 적을 경우 알고리즘 구현이 간단하다.
- 정렬하고자 하는 배열 안에서 교환하는 방식이므로, 추가적인 메모리 소비 적음
- 거의 정렬된 경우 & 자료의 수가 적은 정렬에 매우 효과적이다
   최선의 경우 O(N)의 시간 복잡도를 갖는다
--> 최선의 경우는 거의 정렬이 된 상태이기 때문에 n번만큼 비교를 하면 된다. 그래서
O(n)의 시간 복잡도를 갖는다.
- 바로 옆의 데이터와 비교하기 때문에 안정정렬이 가능하다
- 선택정렬나 버블정렬과 같은 O(N^2) 알고리즘에 비해 상대적으로 빠름

단점 - 

- 자료의 수가 많거나 크기가 클 경우 적합하지 않다
   최악의 경우는 역순이기 때문에 n-1씩 n번 비교를 해야해서 O(n^2)의 시간 복잡도를 지닌다.
   평균은 Big O 표기법에 따르기 때문에 상한선을 표기하기 때문에 평균도 O(n^2)의 시간 복잡도를 지닌다.
- 데이터 상태에 따라 성능 편차가 크다
   배열의 길이가 길어질수록 비효율적이므로 비교적 레코드들의 이동이 많다(선택정렬, 버블정렬과 마찬가지)

3. 자바로 소스코드 구현 및 설명

- 코드 띄우고 디버깅표 띄우기



4. 