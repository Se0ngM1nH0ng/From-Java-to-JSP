★ 결합도 낮추기 ★

결합도가 낮으면 ?
-> 유지보수에 용이

짜놓은 코드를 마지막으로 확인할 때
정말 결합도가 낮은지를 체크하기.

체크했더니, if

이 코드, 결합도가 높네 ?

=> 어떤 요구사항이 발생 했을 때,
코드의 "여러 부분(파트)를 수정 해야 하는 상황"
== 결합도가 높다.
(연쇄적으로 코드를 바꿔야 하는 상황)

DAO의 CRUD(비즈니스 메서드, 핵심 로직)는
어떠한 추가적인 요구사항에도 절대로 !!!
"메서드 시그니쳐"가 변하지 않도록 코드를 작성 한다.

why? 메서드 시그니쳐가 바뀌면 다른 파트에 영향을 미쳐.

그래서, 수정할게 생겼을 때 내부의 기능에 영향이 가는
메서드 시그니쳐를 수정하는게 아니라,
영향을 미치지 않게 코드를 수정 해야 한다.
즉, 외부에서 코드를 추가하거나 수정하는 느낌으로 가야 한다.

결론 : "메서드 시그니쳐"는 설계 단계에서 절대로 변경되면 안된다.

따라서 모델을 건들지 않고, 컨트롤러에서만 해결이 되게 !

메서드 시그니쳐의 인자를
String name, int price, .. 으로 각각에 인자로
설정해두는게 아니라, (이러면 변경이 가능하기에..)

"인자에 고정값"을 줘야 한다.
VO 에 해당되는 클래스명을 사용해서 활용 해야 한다.
그러면, 그것을 사용할 때는 VO 클래스의 객체를 생성 해서,
참조변수(vo). 
으로 표기 해야 한다.

DAO의 CRUD에게 전달 해야 하는 값만 설정 한다.
전달하지 않아도 되는 null 또는 0으로 표기 한다.

결국, VO의 생성자 "인자 갯수에 맞게 객체를 생성" 해주지만,

해당 기능에서 필요하지 않는 값은 null 또는 0으로 표기.


