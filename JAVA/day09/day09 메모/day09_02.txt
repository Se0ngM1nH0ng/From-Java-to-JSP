[ 실습 ]

클래스 구현하기
 1) 멤버변수 3개이상
   클래스변수는 포함시켜도되고,안해도되고
 2) 메서드 2개이상
   오버라이딩 1개포함해서 메서드 2개이상
 3) 생성자 오버로딩 사용
   this 활용
   super 활용

main()에서 부모클래스 객체 1개,
   자식클래스 객체 2개 생성하여 사용하고
   console 화면 보여주세요!~~

+++) 객체배열 활용해보기

ex) 
사람-학생, 
캐릭터-딜러-겐지, 
과일-사과, 
동물-강아지·고양이, 
책-소설, ...



/*
 * 클래스 조상 {
 * 
 * 인스턴스 변수 1
 * 인스턴스 변수 2
 * 인스턴스 변수 3
 * (인스턴스 변수 1개를 줄이고 클래스 변수를 포함 시켜도 된다)
 * (어쨌든 멤버변수는 총 3개)
 * 
 * 생성자(인자 생각 하기)
 * (오버로딩 하기 + this 활용)
 * 
 * 메서드1()
 * (자손 클래스와 기능이 유사할 경우 자손 클래스에서 오버라이딩 1개 하기)
=>
1. 랜덤값으로 상대의 hp와 데미지가 결정
2. 나 또는 상대 hp가 먼저 0보다 같거나 작으면 게임 종료
3. hp 0 먼저 된 애는 죽음 알림
 * 
 * 메서드2()
=>
1. 배틀이 되고 살아남은 것에 상태를 알림
2. 이름, hp
 * }
 * 
 * 클래스 자손1 {
 * 
 * 필요하면 인스턴스 변수 사용
 * 
 * 생성자(인자 생각하기)
 * (super 활용)
 * 
 * 메서드()
 * (조상 클래스와 기능이 유사할 경우 오버라이딩 하기)
=>
1. 배틀 메서드가 유사한데, 공격을 못하는 놈이라 맞기만함 (새로 재정의)
2. 그래서 맞다가 hp 0되면 게임 종료			
3. hp 0된 애는 죽음 알림
 * }
 * 
 * 클래스 자손2 {
 * 
 * 필요하면 인스턴스 변수 사용
 * 
 * 생성자(인자 생각하기)
 * (super 활용)
 * 
 * 메서드()
 * (조상 클래스와 기능이 유사할 경우 오버라이딩 하기)
=>
1. 조상의 배틀 메서드와 동일 (오버라이딩 x)
 * }
 * 
 * main() {
 * 
 * 조상클래스 객체 1개
 * 자손클래스 객체 2개
 * }
 */