[ 웹 크롤링 ]

=> 기본적으로 코드를 분석하는 능력.
=> 데이터를 가공하는 능력.
=> 문서화.


스크랩핑 ?
:
인터넷상에 존재하는 데이터를
프로그램을 이용해서 자동화된 방법으로 수집하는 작업.

↓
크롤링 :
수집한 데이터들을 분류해서 별도로 저장하는 작업.

↓
파싱 : 
유효한 정보로 '가공' (유효한 정보로 가공하기 위해 수집)
즉, 데이터를 이용할 형식에 맞게 추출하여 의미있는 값으로 변형하는 작업.

수집(스크랩핑) -> 저장(크롤링) -> 가공(파싱) 을 묶어서 크롤링 한다고 한다.

대상이 웹이다 ?
=> 웹 크롤링 이다.

----------------------------------------------------------

개발자는 크롬을 많이 사용한다 => 호환성이 높아서..

내가 웹 브라우저로 보는 화면을 웹 페이지 라고 부른다.

why ? 코드로 작성한 페이지를 브라우저로 출력한 결과이기 때문이다.
== 이클립스의 Console 과 같다.
얘는 그래픽이기 때문에 GUI에 해당한다. (아이콘이 있고, 마우스 활용을 하고, ..)

----------------------------------------------------------
 
HTML : HyperText Mark-up Language.

Mark-up ? => 태그 언어를 의미 한다.
열기 : < >, 닫기 : < / > => 요소(element)

예시 -> <head>, </head>

<!DOCTYPE HTML>
이 문서(페이지)의 작성 언어는 HTML 이다.

HTML의 특징 : 
1. 대소문자 구분 XXX
2. 유행에 민감하다. 사용한 단어를 보면 언제 만들어진 건지 유추가 가능하다.

alt => 속성(property) ?
웹 표준 "접근성 지침"을 준수하는 속성.
즉, 남녀노소 모두가 차별없이 웹 페이지를 잘 이용할 수 있게 코더는 페이지를 작성하여 제공 해야 한다.

예시 : 
alt="[광고]라면이라도 먹으면 다행이라 생각했는데 도시락 보고 울컥했어요 아이들에게 주 2회 반찬 보내기">

정리 :
alt를 사용하지 않으면 나에게는 문제가 없다! == 변화가 없다 !
하지만, 스크린 리더 (와 같은 보조기구) 를 활용하는 사람들에게는 제공 자체가 되지 않는다.

사소한데 놓치기 쉬운 부분이기에, 꼭 기억 하기.

------------------------------------------------------------------------

CSS : 코드를 작성해 두면, 페이지의 스타일에 변화를 줄 수 있는 언어.

---------------------------------------------------

웹의 요청 흐름 :
사용자 (Client, 브라우저, ..) 가 버튼을 통해 요청(request) 을 했을때,
이 요청은 URL에 표기가 된다.

예시 :
https://comic.naver.com/webtoon/detail?titleId=783523&no=70
프로토콜://서버(도메인)/위치/위치?변수명=값&변수명=값&변수명=값&...

해석 :
http s(secure : 안전한 버전) 으로

oo 서버(도메인) 에서

oo 위치에서 요청 할거야.

titleId = 'PK'&no=70

(URL로 직접 요청이 가능하다)

서버는 요청이 무엇인지 확인해서 사용자에게 응답할 준비를 한다.

흐름 :
View -> Controller -> Model -> DB -> Model -> Controller -> View

받은 데이터를 화면에 응답 (response) 한다.

참고 :

400대 에러 ?
클라이언트 에러(사용자측 에러)
404 잘못된 페이지를 요청.
없거나, 권한이 없는 페이지를 요청한 경우에 발생. (ex) 마이페이지)

500대 에러 ?
서버 에러(개발자측 에러)
500 코드에 예외가 발생한 경우.
NPE 80% 이상이다. 
NPE ? => 내가 부른 객체가 null 값이 아닌지 ? 를 반드시 확인 하기 !

--------------------------------------------------------------------

라이브러리 ?

1. 자바 코드 묶음. (.jar)
2. 미리 구현한 코드를 제공하는 파일.
3. 라이브러리 분석 XXX (이미 완벽한 코드를 배포한거기 때문에 굳이 분석할 이유가 없다)
따라서, ★ 라이브러리를 잘 활용하는것에 포커스를 맞춰야 한다. ★

---------------------------------------------------------------------

Jsoup 클래스 자동 import XXX
-> 라이브러리를 추가해야한다 !
-> https://jsoup.org/download 다운로드(.jar)
-> 외부 jar 추가
-> 자동 import O




