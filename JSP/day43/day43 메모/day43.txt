${datas} => EL 식으로 표현
(이게 자바 문법을 사용 할 때 getAttribute() 와 동일 한 상황.

scope는 알 수 없지만,
	request,
	session,
	application
.getAttribute()
=> C 가 setAttribute()
	M 으로 부터 받아온,
	DB 으로 부터 받아온,
	서버 데이터 이겠구나.
	를 알 수 있다.

${param.datas}
request.getParameter()
=> 사용자가 form 등을 통해 전달한 데이터 이겠구나를 알 수 있다.

------------------

<c:forEach var = "data" items = "${datas}">

var 이랑 items 가 세트 속성 이다.

이거 말고도, 다른 속성 세트도 있다.

begin end 였나 ?

암튼 그 속성 세트 쓰면, 향상 for문이 아니라. 일반 for 문에 해당 한다.
근데 이렇게 잘 사용 안한다.

------------------

c:if test="${ empty mid }">

<c:if test="${ not empty mid }">

보면,

mid == null

mid != null

mid eq null

mid ne null

보다는, empty 라고 표현 하는게 더 좋다.

프론트 에서는 null을 사용 하는 것보다 empty 를 사용 하는것을 좋아 한다.

------------------

HTML 태그 내부에 JSTL 태그를 사용 하는것은 문법상 문제되진 않지만,
가독성 측면에서 떨어지기 때문에 이렇게 표현 하지 않는다.

HTML 태그 를 감싸는 식으로 JSTL 태그를 사용 한다.

------------------

[ 커스텀 태그 ]

커스텀 태그는 일반적으로, 태그를 만드는 회사가 아닌 이상,
만들지 않는다.

그리고 잘 사용 하지도 않는다.

중요 하지 않다.

근데, 그냥, 국비 출신인데, 커스텀 태그 어떻게 만드는지도 배웠네 ?

때문에 오늘 배우는 것이다.

예상 질문 )

1) 이거 "왜" 사용 했나요 ?

	View 에서 사용 하는 모듈화 기법 입니다 !
	- 코드에 대한 가독성이 좋아 집니다.
	- 코드의 유지보수가 용이 합니다.
	- 코드 재사용성 증가
		- 개발 시간 단축
		- 개발 비용 절감	
		- 회사의 이익 증가

2) 커스텀 태그의 기능 or 기술이 뭔가요 ?
	내가 설령 만든 커스텀 태그가 아니더라도,
	뭔지는 알 수 있도록 하자.
	(문법에 대한 질문이 아니라,,)
	(문법은 구글링 하면 다 나오기 때문에,,)

------------------

[ 필터 (.java 클래스) ]

이거 없으면 아무것도 안돌아갈정도로 매우 중요하다.

실제 현업에서 가면, 솔루션이나, 프레임 워크나 등등,

그냥 기본 제공 되고 있다.

그래서, 필터 클래스의 개념 자체를 모르고 사용 하는 경우가 많다.

근데, 실제로 이거 건드릴 일이 없긴 하다.

이것도, 이러한 개념을 알고 있어요. 라는 것을 어필 하면 좋다.



1) 필터 클래스 왜 사용 하나요 ?

스노우 어플 필터를 생각 해보자. (렌즈에 내 얼굴 넣으면 보정)
또는
정수기의 필터를 생각 해보자. (물이 필터를 통과 하면 깨끗)

사용자 (브라우저, 클라이언트) 의 요청에
특정 기능을 부여 하기 위해 사용 한다.
ex) 인코딩, 권한 확인, 로그, 보안, ..

권한 확인은 뭐 카페에 회원 등급에 따라서,
게시글을 볼 수 있고, 없고 차이..




2) 필터 클래스는 언제 동작 하나요 ?

V --- 필터 클래스 (기능 부여) ---> C

사용자 (브라우저, 클라이언트) 의 요청 직후에 바로 호출 된다.
(일반적으로 그렇다.)

정확하게는 >>
Filter mappings 설정한 시간에 호출 된다 !!!

근데, 보통 이 Filter mappings를 설정하는 때가,
사용자가 요청한 직후로 설정 한다.

개념 ~~~

------------------

대표적인 Not POJO 



POJO : Plain of Java Object

아무것도 없고 구식인, 자바 객체 이다. 라는 의미 이다.

우리가 만드는 StudentVO, CarVO, 등등..

일반 class 파일로 만들 수 있는 자바 클래스 (객체) 들을

POJO  라고 한다.

Not POJO 는 뭘까?

ex)
Filter, Listener, Servlet 등이다.

위의 class 파일을 생성하면,
이미 import 가 많이 되어있는 상태로 생성이 된다.
즉, 기본 제공 되는 기능들이 이미 많다는 것이다.

이런것을 Not POJO 클래스 라고 한다.

------------------

톰캣에서 WEB-INF 안에 있는 web.xml 파일을 보라고,
디폴트로 설정이 되어 있다.

이 web.xml 파일에, 아래의 코드를 반드시 작성해서 사용 한다.

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
</web-app>









