[ 리스너 ]

	필터	
		: 특수한 형태의 "서블릿".
		: 특정 요청 (필터 매핑) 에 대해 기능을 추가하고,
			원래의 요청을 정상 수행 한다.
		ex) 인코딩

	리스너
		: 특수한 형태의 "서블릿".
		: 특정 시간 (타이밍) 에 기능을 추가 한다.
		ex) 서블릿이 동작 되었을 때,
		ex) 서버가 시작 할 때,
		ex) 서블릿이 변경 되었을 때,
		=> ~ 할 때.
		=> 어떤 상태를 감지 하는.
		
		ex) 샘플 데이터를 확보하는 상황에, 응용 할 수 있겠다.
			서버가 시작 되었어 ?
			그러면, 샘플 데이터를 크롤링 해서,
			크롤링 완료된 데이터들을,
			DB에 insert() 해줘 ~

서블릿, 필터, 리스너 => Not POJO
(Controller 파트 이다.)

서블릿을 상속 받은 클래스가 필터 클래스와 리스너 클래스 이다.

서블릿 클래스가 부모 클래스 이고,
필터 클래스와, 리스너 클래스는 자식 클래스 이다.

-----------

Lifecycle => 서버 시작을 감지.

-----------------------

//	웹 세상에는, 디폴트 생성자를 사용 하기에, 따로 생성자를 만들 필요가 없다.


